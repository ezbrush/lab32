pipeline {
  agent {
    docker {
      image 'python:3.11-slim'          // Imagen base con Python
      args '-u root --entrypoint=""'    // root + deshabilitar entrypoint
    }
  }

  stages {
    stage('Install tools') {
      steps {
        sh '''
          apt-get update && apt-get install -y wget curl git
          pip install --no-cache-dir checkov
          wget -q -O - https://github.com/open-policy-agent/conftest/releases/download/v0.52.0/conftest_0.52.0_Linux_x86_64.tar.gz | tar xz -C /usr/local/bin
          echo ">>> Versiones instaladas:"
          conftest --version
          checkov --version
          git --version
        '''
      }
    }

    stage('Checkout repos') {
      steps {
        // El repo principal (lab32) ya se clona autom√°ticamente por Jenkins
        dir('lab1-conftest') {
          checkout([$class: 'GitSCM',
            branches: [[name: '*/main']],
            userRemoteConfigs: [[url: 'https://github.com/ezbrush/lab1-conftest']]
          ])
        }
        dir('lab2-checkov') {
          checkout([$class: 'GitSCM',
            branches: [[name: '*/main']],
            userRemoteConfigs: [[url: 'https://github.com/ezbrush/lab2-checkov']]
          ])
        }
      }
    }

    stage('Policy Check - Conftest') {
      steps {
        sh 'conftest test --policy lab1-conftest/policies lab1-conftest/manifests/deployment-insecure.yaml'
      }
    }

    stage('Policy Check - Checkov') {
      steps {
        sh 'checkov -d lab2-checkov/terraform'
      }
    }
  }

  post {
    always {
      echo 'Policy checks completed'
    }
  }
}
